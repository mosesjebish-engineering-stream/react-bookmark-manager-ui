{"version":3,"sources":["components/ImageCard.js","components/CreateCard.js","components/CardManagement.js","components/ShortenUrl.js","components/GroupCard.js","components/CreateGroup.js","components/GroupManagement.js","App.js","index.js"],"names":["ImageCard","image","className","application","shortUrl","tribe","platform","description","userId","CreateCard","props","state","url","createdBy","approved","groupDetailInfo","id","groupName","adminInfoList","userInfoDetails","userName","permissions","handleUrl","bind","handleDescription","handleSubmit","handlePlatform","handleTribe","handleApplication","event","requestOptions","method","headers","body","JSON","stringify","longUrl","this","fetch","then","response","json","data","setState","target","value","onSubmit","InputLabel","htmlFor","Input","aria-describedby","onChange","FormHelperText","type","style","transition","onClick","React","Component","CardManagement","cardValue","useState","images","setImages","setIsLoading","showModal","setShowModal","term","useEffect","res","cardDetailDtoList","console","log","catch","err","map","key","ShortenUrl","any","preventDefault","defaultValue","handleChange","GroupCard","CreateGroup","GroupManagement","groupCardDetails","Object","keys","App","options","position","positions","BOTTOM_CENTER","timeout","offset","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.e67f7f7b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport CardManagement from './CardManagement';\r\n\r\nconst ImageCard = ({image}) => {\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n            {/* <img src={image.webformatURL} alt=\"\" className=\"w-full\"/> */}\r\n            <div className=\"px-6 py-4\">\r\n                <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n                    {image.application}\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <strong>Url: </strong>\r\n                        {image.shortUrl}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Tribe: </strong>\r\n                        {image.tribe}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Application: </strong>\r\n                        {image.application}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Platform: </strong>\r\n                        {image.platform}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Description: </strong>\r\n                        {image.description}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Created By: </strong>\r\n                        {image.userId}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n{/*            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                    onClick={<CardManagement image={\"Bookmark 1\"}/>}>\r\n                Button\r\n            </button>*/}\r\n\r\n            <div className=\"px-6 py-4\">\r\n                {/* {tags.map((tag, index) => (\r\n          <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n          #{tag}\r\n        </span>\r\n        ))} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from 'react';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\nclass CreateCard extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        // Simple POST request with a JSON body using fetch\r\n\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            url: 'Enter the url',\r\n            description: 'Describe the card',\r\n            createdBy: 'Enter user name',\r\n            application: 'Enter the application name',\r\n            tribe: 'Enter the application tribe',\r\n            platform: 'Enter the application platform',\r\n            //********enhance below fields to fetched approved status from user info*********\r\n            approved: true,\r\n            groupDetailInfo: [{\r\n                id: 8,\r\n                groupName: \"My Group From UI\",\r\n                createdBy: \"Jebish Moses\",\r\n                adminInfoList: [\r\n                    \"Jebish Moses\"\r\n                ]\r\n            }],\r\n            userInfoDetails: [{\r\n                userId: \"mosesjebish\",\r\n                userName: \"Jebish Moses\",\r\n                permissions: [\r\n                    \"admin\"\r\n                ]\r\n            }],\r\n            userId: 'Jebish Moses'\r\n\r\n\r\n        };\r\n\r\n        this.handleUrl = this.handleUrl.bind(this);\r\n        this.handleDescription = this.handleDescription.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handlePlatform = this.handlePlatform.bind(this);\r\n        this.handleTribe = this.handleTribe.bind(this);\r\n        this.handleApplication = this.handleApplication.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n/*        const alert = useAlert();\r\n        event.preventDefault();*/\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify([{\r\n                longUrl: this.state.url,\r\n                userId: this.state.userId,\r\n                description: this.state.description,\r\n                application: this.state.application,\r\n                tribe: this.state.tribe,\r\n                platform: this.state.platform,\r\n                approved: this.state.approved,\r\n                groupDetailInfo: this.state.groupDetailInfo,\r\n                userInfoDetails: this.state.userInfoDetails\r\n\r\n            }])\r\n        };\r\n        fetch('http://20.44.213.195:7443/api/bookmarks/createCard', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState());\r\n    }\r\n\r\n    handleUrl(event) {\r\n        this.setState({url: event.target.value});\r\n    }\r\n\r\n    handleDescription(event) {\r\n        this.setState({description: event.target.value});\r\n    }\r\n\r\n    handleApplication(event) {\r\n        this.setState({application: event.target.value});\r\n    }\r\n\r\n    handleTribe(event){\r\n        this.setState({tribe: event.target.value})\r\n    }\r\n\r\n    handlePlatform(event){\r\n        this.setState({platform: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"application-name\">Application name</InputLabel>\r\n                            <Input id=\"application-name\" aria-describedby=\"my-helper-text\" onChange={this.handleApplication}/>\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application Name.</FormHelperText>\r\n                        </div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"application-url\">Application URL</InputLabel>\r\n                            <Input id=\"short-url\" aria-describedby=\"my-helper-text\" onChange={this.handleUrl} />\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application URL.</FormHelperText>\r\n                        </div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"tribe\">Tribe</InputLabel>\r\n                            <Input id=\"tribe\" aria-describedby=\"my-helper-text\" onChange={this.handleTribe}/>\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application Tribe.</FormHelperText>\r\n                        </div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"platform\">Platform</InputLabel>\r\n                            <Input id=\"platform\" aria-describedby=\"my-helper-text\" onChange={this.handlePlatform}/>\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application platform.</FormHelperText>\r\n                        </div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"description\">Description</InputLabel>\r\n                            <Input id=\"description\" aria-describedby=\"my-helper-text\" onChange={this.handleDescription}/>\r\n                            <FormHelperText id=\"my-helper-text\">Describe the application.</FormHelperText>\r\n                        </div>\r\n                        <button\r\n                            className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                            type=\"submit\"\r\n                            style={{ transition: \"all .15s ease\" }}\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateCard;","import React, {useEffect, useState} from 'react';\r\nimport ImageCard from './ImageCard';\r\nimport CreateCard from \"./CreateCard\";\r\n\r\nconst CardManagement = ({cardValue}) => {\r\n\r\n    const [images, setImages, deps, setDeps] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [term, setTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(`http://20.44.213.195:7443/api/bookmarks/cards`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setImages(data.cardDetailDtoList);\r\n                console.log(\"API return value is\", images)\r\n\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [term]);\r\n\r\n    let addModalClose = () => setShowModal(false);\r\n\r\n    let refreshPage = () => {\r\n        setShowModal(false);\r\n        //window.location.reload(false);\r\n    }\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <>\r\n                <button\r\n                    className=\"bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{transition: \"all .15s ease\"}}\r\n                    onClick={() => setShowModal(true)}\r\n                >\r\n                    Create Card\r\n                </button>\r\n                {showModal ? (\r\n                    <>\r\n                        <div\r\n                            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                            // onClick={() => setShowModal(false)}\r\n                        >\r\n                            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                                {/*content*/}\r\n                                <div\r\n                                    className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                    {/*header*/}\r\n                                    <div\r\n                                        className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\r\n                                        <h3 className=\"text-3xl font-semibold\">\r\n                                            Create New Card\r\n                                        </h3>\r\n                                        <button\r\n                                            className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                            onClick={() => setShowModal(false)}\r\n                                        >\r\n                    <span\r\n                        className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                                        </button>\r\n                                    </div>\r\n                                    {/*body*/}\r\n                                    <div className=\"relative p-6 flex-auto\">\r\n                                        <CreateCard/>\r\n                                    </div>\r\n                                    {/*footer*/}\r\n                                    <div\r\n                                        className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                                        <button\r\n                                            className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                                            type=\"button\"\r\n                                            style={{transition: \"all .15s ease\"}}\r\n                                            onClick={() => setShowModal(false)}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                    </>\r\n                ) : null}\r\n            </>\r\n\r\n            {/* {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1> } */}\r\n\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n                {/*iterate the objects from backend and create tiles of Image Card*/}\r\n                {images.map(image => (\r\n                    <ImageCard key={image.id} image={image}/>\r\n                ))}\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardManagement;","import React from 'react';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport {any} from \"prop-types\";\r\n\r\nclass ShortenUrl extends React.Component {\r\n    componentDidMount() {\r\n        // Simple POST request with a JSON body using fetch\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shortUrl: any,\r\n            longUrl: 'Enter the url'\r\n\r\n\r\n        };\r\n\r\n        this.handleUrl = this.handleUrl.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const requestOptions = {\r\n            headers: {'Content-Type': 'application/json'},\r\n        };\r\n        fetch(`http://20.44.213.195:7443/api/bookmarks/shortenUrl?url=` + this.state.url + '&type=group', requestOptions)\r\n            .then(response =>\r\n                response.json()\r\n            )\r\n            .then(data => {\r\n                console.log(\"Data value is\", data.shortUrl)\r\n                this.setState({shortUrl: data.shortUrl});\r\n                this.setState({longUrl: data.longUrl})\r\n\r\n            })\r\n    }\r\n\r\n    handleUrl(event) {\r\n        this.setState({url: event.target.value});\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            shortUrl: event.target.shortUrl,\r\n            longUrl: event.target.longUrl\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"max-w-xs rounded overflow-hidden shadow-lg\">\r\n                    <div className=\"px-8 py-8\">\r\n                        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n                            Create your card\r\n                        </div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"application-name\">Long Url</InputLabel>\r\n                            <Input id=\"application-name\" aria-describedby=\"my-helper-text\" defaultValue={this.state.longUrl} onChange={this.handleChange}/>\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application Name.</FormHelperText>\r\n                        </div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"application-url\">Short URL</InputLabel>\r\n                            <Input id=\"short-url\" aria-describedby=\"my-helper-text\" defaultValue={this.state.shortUrl} onChange={this.handleChange}/>\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application URL.</FormHelperText>\r\n                        </div>\r\n                        <input className=\"-moz-focusring\" type=\"submit\" value=\"Submit\"/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShortenUrl;","import React, {useState} from 'react';\r\nimport CardManagement from \"./CardManagement\";\r\n\r\nconst GroupCard = ({image}) => {\r\n\r\n    const [showModal, setShowModal] = useState(true);\r\n\r\n    let addModalClose = () => setShowModal(false);\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n            {showModal?\r\n                (<div className=\"px-6 py-4\">\r\n                    <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n                        {image}\r\n                    </div>\r\n                    <button\r\n                        className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                        type=\"submit\"\r\n                        style={{ transition: \"all .15s ease\" }}\r\n                        onClick={() => setShowModal(false)}\r\n                    >\r\n                        Detail ->\r\n                    </button>\r\n                </div>) :\r\n                <CardManagement/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupCard;\r\n","import React from 'react';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\nclass CreateGroup extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        // Simple POST request with a JSON body using fetch\r\n\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =   {\r\n            groupName: \"Enter Group Name\",\r\n            createdBy: \"Jebish Moses\",\r\n            adminInfoList: [\r\n                \"Jebish Moses\"\r\n            ]\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleApplication = this.handleApplication.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify([{\r\n                groupName: this.state.groupName,\r\n                createdBy: this.state.createdBy,\r\n                adminInfoList: [\r\n                    \"Jebish Moses\"\r\n                ]\r\n            }])\r\n        };\r\n        fetch('http://20.44.213.195:7443/api/bookmarks/createGroup', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState());\r\n    }\r\n\r\n    handleApplication(event) {\r\n        this.setState({groupName: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <InputLabel htmlFor=\"application-name\">Group name</InputLabel>\r\n                            <Input id=\"application-name\" aria-describedby=\"my-helper-text\" onChange={this.handleApplication}/>\r\n                            <FormHelperText id=\"my-helper-text\">Enter the application Name.</FormHelperText>\r\n                        </div>\r\n                        <button\r\n                            className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                            type=\"submit\"\r\n                            style={{ transition: \"all .15s ease\" }}\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateGroup;","import React, {useEffect, useState} from 'react';\r\nimport CreateCard from \"./CreateCard\";\r\nimport GroupCard from \"./GroupCard\";\r\nimport CreateGroup from \"./CreateGroup\";\r\n\r\nconst GroupManagement = ({}) => {\r\n\r\n    const [images, setImages, deps, setDeps] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [term, setTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(`http://20.44.213.195:7443/api/bookmarks/groupCardsBy?groupBy=GROUP_NAME`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setImages(data.groupCardDetails);\r\n                console.log(\"API return value is\", images)\r\n\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [term]);\r\n\r\n    let addModalClose = () => setShowModal(false);\r\n\r\n    let refreshPage = () => {\r\n        setShowModal(false);\r\n        //window.location.reload(false);\r\n    }\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <>\r\n                <button\r\n                    className=\"bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{transition: \"all .15s ease\"}}\r\n                    onClick={() => setShowModal(true)}\r\n                >\r\n                    Create Group\r\n                </button>\r\n                {showModal ? (\r\n                    <>\r\n                        <div\r\n                            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                            // onClick={() => setShowModal(false)}\r\n                        >\r\n                            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                                {/*content*/}\r\n                                <div\r\n                                    className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                    {/*header*/}\r\n                                    <div\r\n                                        className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\r\n                                        <h3 className=\"text-3xl font-semibold\">\r\n                                            Create New Group\r\n                                        </h3>\r\n                                        <button\r\n                                            className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                            onClick={() => setShowModal(false)}\r\n                                        >\r\n                    <span\r\n                        className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                                        </button>\r\n                                    </div>\r\n                                    {/*body*/}\r\n                                    <div className=\"relative p-6 flex-auto\">\r\n                                        <CreateGroup/>\r\n                                    </div>\r\n                                    {/*footer*/}\r\n                                    <div\r\n                                        className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                                        <button\r\n                                            className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                                            type=\"button\"\r\n                                            style={{transition: \"all .15s ease\"}}\r\n                                            onClick={() => setShowModal(false)}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                    </>\r\n                ) : null}\r\n            </>\r\n\r\n            {/* {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1> } */}\r\n\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n                {/*iterate the objects from backend and create tiles of Image Card*/}\r\n                {Object.keys(images).map(image => (\r\n                    <GroupCard key={image.id} image={image}/>\r\n                ))}\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupManagement;","import React, {Component} from 'react';\r\nimport {Tab, TabList, TabPanel, Tabs} from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport CardManagement from './components/CardManagement';\r\nimport ShortenUrl from \"./components/ShortenUrl\";\r\nimport GroupManagement from \"./components/GroupManagement\";\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container mx-auto\">\r\n\r\n                <Tabs>\r\n                    <TabList>\r\n\r\n                        <Tab>All Cards</Tab>\r\n                        <Tab>Groups</Tab>\r\n                        <Tab>Shorten url</Tab>\r\n                        <Tab>Task List</Tab>\r\n                    </TabList>\r\n\r\n\r\n                    <TabPanel>\r\n                        <div>\r\n                            <CardManagement/>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <GroupManagement/>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <ShortenUrl/>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <h2>You can validate changes here here</h2>\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css';\r\nimport App from './App';\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_CENTER,\r\n    timeout: 5000,\r\n    offset: '30px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE\r\n}\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AlertProvider template={AlertTemplate} {...options}>\r\n    <App />\r\n      </AlertProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}